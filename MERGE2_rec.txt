#include <stdio.h>
int count=0;
int partition(int a[], int start, int end)
{
   int j;
    int pivot = a[end];
    int i = (start - 1);

    for (j = start; j <= end - 1; j++)
    {
        if (a[j] < pivot)
        {
            
            i++;
            int t = a[i];
            a[i] = a[j];
            a[j] = t;
        }
    }
    int t = a[i + 1];
    a[i + 1] = a[end];
    a[end] = t;
   
    return (i + 1);
}
void quick(int a[], int start, int end)
{    
    
    
 
    if (start < end)
    {
        count++;
        int p = partition(a, start, end);
        quick(a, start, p - 1);
        quick(a, p + 1, end);
    }
   
    }

int main()
{
    int num, i;
    printf("\nEnter the total number of elements: ");
    scanf("%d", &num);
    int a[num];
    printf("\nEnter the elements in list :");
    for (i = 0; i < num; i++)
    {
        scanf("%d", &a[i]);
    }
    int n = sizeof(a) / sizeof(a[0]);
    quick(a, 0, n - 1);
    printf("\nAfter sorting array elements are - \n");
    for(i=0;i<num;i++)
    {
      printf("%d ",a[i]);
      }
    printf("steps:%d ",count);
    return 0;
}