#include <stdio.h>

void Knapsack(float w[], float p[], float dw[], int m, int n)
{
	int i,j,U=m;
  	float x[n], prof=0.0, weight=0.0;
  	for(i=0;i<n;i++)
    	x[i]=0.0;
  	for(i=0;i<n;i++)
  	{ 
    	 if(w[i]>U)
       break;
    	 x[i]=1.0;
    	 U=U-w[i];
    	 prof += p[i]*x[i];
    	 weight += w[i]*x[i];
  	}
  	 if(i<=n-1)
  	 {
    	  x[i]=U/w[i];
    	  prof += p[i]*x[i];
    	  weight += w[i]*x[i];
  	 }
  	  printf("\nTHE MAXIMUM PROFIT=%.2f AND THE KNAPSACK WEIGHT=%.2f\n", prof, weight);
  	  for(i=0;i<n;i++)
  	  {
    	    for(j=0;j<n;j++)
    	    {
          if(dw[i]==w[j])
          printf("ITEM%d = %.2f\t", i+1, x[j]);
    	    }
  	  }
  	  printf("\n");
}

void isort(float w[],float p[],int n)
{
	int i, j,p1,w1;
  	for(j=1;j<=n;j++)
  	{
  	  p1=p[j];w1=w[j];
  	  float item=(p[j]/w[j]);
    	  i=j-1;
    	  while((i>=0) && (item>(p[i]/w[i])))
    	  {
    		p[i+1]=p[i];
    		w[i+1]=w[i];
    		i-=1;
    	  }
		p[i+1]=p1;
    	     w[i+1]=w1;
  	 }
	 printf("\nSORTED P:: ");
  	 for(i=0;i<n;i++)
  	 {
    	  printf("%f\t",p[i]);
  	 }
  	 printf("\nSORTED W:: ");
  	 for(i=0;i<n;i++)
  	 {
    	  printf("%f\t",w[i]);
  	 }
  	 printf("\n");
}

int main(void)
{
	int m,n,i;
  	printf("ENTER VALUE OF M:: ");
  	scanf("%d",&m);
  	printf("ENTER VALUE OF N:: ");
  	scanf("%d",&n);
	float p[n],w[n],dw[n];
	  
  	printf("ENTER ELEMENTS OF p:: ");
  	for(i=0;i<n;i++)
  	{
    	 scanf("%f",&p[i]);
  	}
  	 printf("ENTER ELEMENTS OF W:: ");
  	 for(i=0;i<n;i++)
  	 {
    	  scanf("%f",&w[i]);
  	 }
  	 for(i=0;i<n;i++)
  	 {
    	   dw[i]=w[i];
  	 }
  	  isort(w,p,n);
  	  Knapsack(w, p, dw, m, n);
  	  return 0;
}